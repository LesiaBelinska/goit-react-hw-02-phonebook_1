{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleSubmit","e","preventDefault","props","onSubmit","reset","handleChange","currentTarget","value","setState","this","htmlFor","type","pattern","title","required","onChange","id","className","Component","Filter","filterInputId","ContactListItem","onDeleteContact","onClick","ContactList","contacts","map","App","filter","addContact","newContact","find","contact","alert","changeFilter","findContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9601c638.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropsType from 'prop-types';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n    state = {\n    name: '',\n    number: '',\n  };\n\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n    handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n    }\n    \n    handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    }\n    \n     reset() {\n    this.setState({\n      name: '',\n      number: ''\n    })\n    }\n    \n    render() {\n        const { name, number } = this.state;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label htmlFor={this.nameInputId}>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={this.handleChange}\n                        id={this.nameInputId}\n                    />\n                </label>\n\n                <label htmlFor={this.numberInputId}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={this.handleChange}\n                        id={this.numberInputId}\n                    />\n                </label>\n\n                <button\n                    className='button'\n                    type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    onSubmit: PropsType.func.isRequired,\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nclass Filter extends Component {\n\n    filterInputId = shortid.generate();\n\n    render() {\n        return (\n            <label htmlFor={this.filterInputId}>\n                Find contacts by name\n                <input\n                    type='text'\n                    value={this.props.value}\n                    onChange={this.props.onChange}\n                />\n            </label>\n        )\n    }\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n    return (\n        <li>\n            {name} : {number}\n            <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n        >\n            Delete\n        </button>\n        </li>\n    )\n}\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\n\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\n\nconst ContactList = ({contacts, onDeleteContact}) => {\n    return (\n        <ul>\n            {contacts().map(({ id, name, number }) => {\n                return (\n                    <ContactListItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        onDeleteContact={onDeleteContact}\n                    />\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n    contacts: PropTypes.func.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\n\nclass App extends Component {\n   state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`)\n      return;\n    }\n  \n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n  \n   changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  \n  findContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  \n  render() {\n    const { filter, contacts } = this.state;\n    const findContacts = this.findContacts\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={findContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}